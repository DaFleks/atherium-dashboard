// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MODERATOR
  GUEST
}

enum CustomerRole {
  CUSTOMER
  SUSPENDED
  PREMIUM
}

enum ProductStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  hashedPassword String
  firstName      String
  lastName       String
  role           UserRole @default(GUEST)
  permissions    String
  isActive       Boolean
  Address        Address?
  lastLogin      DateTime
}

model Customer {
  id             String       @id @default(cuid())
  email          String       @unique
  hashedPassword String
  firstName      String
  lastName       String
  isActive       Boolean
  addresses      Address[]
  emailVerified  Boolean
  lastLogin      DateTime
  role           CustomerRole @default(CUSTOMER)
}

model Address {
  id          String  @id @default(cuid())
  street      String
  city        String
  province    String
  postalCode  String
  country     String
  phoneNumber String
  isDefault   Boolean @default(false)

  //  Relations
  user       User?     @relation(fields: [userId], references: [id])
  userId     String    @unique
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
}

// model Product {
//   id          String        @id @default(cuid())
//   name        String
//   description String?
//   sku         String        @unique
//   stock       Int           @default(0)
//   status      ProductStatus @default(INACTIVE)

//   //  Relations
//   category   Category? @relation(fields: [categoryId], references: [id])
//   categoryId String

//   brand   Brand? @relation(fields: [brandId], references: [id])
//   brandId String

//   images ProductImage[]

//   variants ProductVariant[]

//   //  Pricing
//   price              Float @default(0.0)
//   discountPrice      Float @default(0.0)
//   discountPercentage Float @default(0.0)

//   //  Metrics
//   viewCount     Int                   @default(0)
//   reviewCount   Float                 @default(0.0)
//   wishlistCount Int                   @default(0)
//   cartCount     Int                   @default(0)
//   soldCount     Int                   @default(0)
//   returnCount   Int                   @default(0)
//   averageRating Float                 @default(0)
//   priceHistory  ProductPriceHistory[]
// }

// model Category {
//   id       String     @id @default(cuid())
//   name     String
//   parent   Category?  @relation("Subcategories", fields: [parentId], references: [id])
//   parentId String
//   children Category[] @relation("Subcategories")

//   products Product[]
// }

// model Brand {
//   id   String @id @default(cuid())
//   name String

//   products Product[]
// }

// model ProductImage {
//   id      String  @id @default(cuid())
//   src     String
//   altText String?

//   product   Product @relation(fields: [productId], references: [id])
//   productId String
// }

// model ProductVariant {
//   id    String @id @default(cuid())
//   name  String
//   sku   String @unique
//   price Float  @default(0)
//   stock Int    @default(0)

//   product   Product @relation(fields: [productId], references: [id])
//   productId String

//   priceHistory ProductPriceHistory[]
// }

// model ProductPriceHistory {
//   id               String          @id @default(cuid())
//   oldPrice         Float
//   newPrice         Float
//   userId           String // User who made the change, no need for anything else
//   product          Product         @relation(fields: [productId], references: [id])
//   productId        String
//   ProductVariant   ProductVariant? @relation(fields: [productVariantId], references: [id])
//   productVariantId String?
// }
